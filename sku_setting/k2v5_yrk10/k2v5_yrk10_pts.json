{
  "fullpath": {
    "source": "fullpath",
    "begPairs": [],
    "endPairs": [],
    "type": "str",
    "dbtype": "text"
  },
  "bname": {
    "source": "fullpath",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "/",
        "index": -1
      }
    },
    "type": "str",
    "dbtype": "varchar(40)"
  },
  "is_y": {
    "source": "bname",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "_",
        "index": 2
      },
      "trueFalse": {
        "compare": "Y"
      }
    },
    "type": "bool",
    "dbtype": "boolean"
  },
  "total_td": {
    "source": "total_td",
    "begPairs": [],
    "endPairs": [],
    "type": "int",
    "dbtype": "int",
    "parseInTheEnd": true
  },
  "sn": {
    "source": "scontext",
    "begPairs": ["# SN="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(14)",
    "description": "can be get from filename"
  },
  "tbeg": {
    "source": "scontext",
    "begPairs": ["== Capture start "],
    "endPairs": [" , "],
    "type": "datetime",
    "dbtype": "timestamp"
  },
  "tend": {
    "source": "scontext",
    "begPairs": ["== Capture end "],
    "endPairs": [" ==="],
    "begIndexs": [-1],
    "type": "datetime",
    "dbtype": "timestamp"
  },
  "tm_td": {
    "source": "scontext",
    "begPairs": [["TOTAL                              PASS                               ","TOTAL                              FAIL                               "]],
    "endPairs": [[" "]],
    "begIndexs" : [-1],
    "type": "float",
    "dbtype": "float"
  },
  "mac": {
    "source": "scontext",
    "begPairs": ["# MAC_START="],
    "endPairs": [[","," "]],
    "type": "str",
    "dbtype": "varchar(14)"
  },
  "tpver": {
    "source": "scontext",
    "begPairs": ["# TPVER="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "fwver": {
    "source": "scontext",
    "begPairs": ["# FWVER="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "wo": {
    "source": "scontext",
    "begPairs": ["* Work Order: "],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(32)"
  },
  "line": {
    "source": "scontext",
    "begPairs": ["# LINE="],
    "endPairs": [[" ", ","]],
    "type": "str",
    "dbtype": "varchar(12)"
  },
  "riser_sn": {
    "source": "scontext",
    "begPairs": [
      ["riser SN                   : "],
      ["riser SN               : "]
    ],
    "endPairs": [
      [" ", "\n"],
      [" ", "\n"]
    ],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "riser_use_cnt": {
    "source": "scontext",
    "begPairs": ["riser SN                   :", "# USE_COUNT = "],
    "endPairs": ["_f_get_riser_sn", " "],
    "type": "int",
    "dbtype":"int"
  },
  "acc_commit": {
    "source": "scontext",
    "begPairs": ["acc commit="],
    "endPairs": [" "],
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "makalu_commit": {
    "source": "scontext",
    "begPairs": ["makalu commit="],
    "endPairs": [" "],
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "ult":{
    "source": "scontext",
    "type": "str",
    "begPairs":["Info: ULT: "],
    "endPairs":["\n"],
    "actions": {"strip": {}},
    "dbtype":"varchar(32)"
  },  
  "rpi_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "temp=([0-9.]+)'C"
      }
    },
    "dbtype":"float"
  },
  "soc_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],
    "actions": {
      "findMaxPattern": {
        "pattern": "SoC Thermal Margin.*?:\\s*([0-9]+)\\[C\\]"
      }
    },
    "dbtype":"float"
  },
  "critical_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "findMaxPattern": {
        "pattern": "critical temperature reached \\((\\d+) C\\)"
      }
    },
    "dbtype":"float"
  },
  "kernel_panic": {
    "source": "scontext",
    "type": "bool",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "trueFalse": { "contains_nocase": "kernel panic" }
    },
    "dbtype": "boolean"
  },

  "slot": {
    "source": "bname",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "_",
        "index": 3
      }
    },
    "type": "str",
    "dbtype": "varchar(12)"
  },
  "test_pc_ip": {
    "source": "scontext",
    "begPairs": ["# TEST_PC_IP="],
    "endPairs": [" "],
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "test_pc_ip_slot": {
    "source": "scontext",
    "begPairs": ["# TEST_PC_IP="],
    "endPairs": [" "],
    "actions": {
      "merge": {
        "with_var": "slot",
        "sep": "_"
      }
    },
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "jig": {
    "source": "scontext",
    "begPairs": ["Mechanical Fixture : "],
    "endPairs": [" "],
    "type": "str",
    "dbtype": "varchar(32)"
  },
  "err_msg": {
    "source": "scontext",
    "begPairs": ["# ErrorMSG: "],
    "endPairs": [ "#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "text"
  },
  "err_id": {
    "source": "scontext",
    "begPairs": ["# ErrorId:  "],
    "endPairs": [ "#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "rpi_sdram_c_v_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "sdram_c volt=([0-9.]+)V"
      }
    },
    "dbtype":"float"
  },
  "rpi_sdram_i_v_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "sdram_i volt=([0-9.]+)V"
      }
    },
    "dbtype":"float"
  },
  "rpi_sdram_p_v_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "sdram_p volt=([0-9.]+)V"
      }
    },
    "dbtype":"float"
  },
  "rpi_core_v_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "core volt=([0-9.]+)V"
      }
    },
    "dbtype":"float"
  },
  "rpi_mac": {
    "source": "scontext",
    "begPairs": ["ether "],
    "endPairs": [[" ","\n"]],
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "rpi":{
    "source": "scontext",
    "begPairs": ["RPI Module    : "],
    "endPairs": ["\n"],
    "type": "str",
    "dbtype": "text"
  },
  "rpi_type":{
    "source": "scontext",
    "begPairs": ["Raspberry PI model:", "Type: "],
    "endPairs": ["Network configuration", ","],
    "type": "str",
    "dbtype": "text"
  },
  "rpi_revision":{
    "source": "scontext",
    "begPairs": ["Raspberry PI model:", "Revision: "],
    "endPairs": ["Network configuration", ","],
    "type": "str",
    "dbtype": "text"
  },
  "rpi_memory":{
    "source": "scontext",
    "begPairs": ["Raspberry PI model:", "Memory: "],
    "endPairs": ["Network configuration", "MB"],
    "type": "str",
    "dbtype": "int"
  },
  "rpi_maker":{
    "source": "scontext",
    "begPairs": ["Raspberry PI model:", "Maker: "],
    "endPairs": ["Network configuration", "\n"],
    "type": "str",
    "dbtype": "text"
  },
  "rpi_ip": {
    "source": "scontext",
    "begPairs": ["*-->","inet "],
    "endPairs": ["Kernel IP routing table"," "],
    "begIndexs": [1,2],
    "type": "str",
    "dbtype": "varchar(30)"
  },
  
  "tm_logpath": {
    "source": "scontext",
    "begPairs": ["[INFO] logpath : "],
    "endPairs": ["\n"],
    "type": "str",
    "dbtype": "varchar(200)"
  },
  "testplatform_sn": {
    "source": "scontext",
    "begPairs": ["aio SN               : "],
    "endPairs": ["\n"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "text"
  },
  "testplatform_pn": {
    "source": "scontext",
    "begPairs": ["aio PN               : "],
    "endPairs": ["\n"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "text"
  },
  "testplatform_ver": {
    "source": "scontext",
    "begPairs": ["aio PCB_VER          : "],
    "endPairs": ["\n"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "text"
  }
}