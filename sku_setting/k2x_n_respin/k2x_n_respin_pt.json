{
  "fullpath": {
    "source": "fullpath",
    "begPairs": [],
    "endPairs": [],
    "type": "str",
    "dbtype": "text"
  },
  "bname": {
    "source": "fullpath",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "/",
        "index": -1
      }
    },
    "type": "str",
    "dbtype": "varchar(40)"
  },
  "is_y": {
    "source": "bname",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "_",
        "index": 2
      },
      "trueFalse": {
        "compare": "Y"
      }
    },
    "type": "bool",
    "dbtype": "boolean"
  },
  "total_td": {
    "source": "total_td",
    "begPairs": [],
    "endPairs": [],
    "type": "int",
    "dbtype": "int",
    "parseInTheEnd": true
  },
  "sn": {
    "source": "scontext",
    "begPairs": ["# SN="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(14)",
    "description": "can be get from filename"
  },
  "tbeg": {
    "source": "scontext",
    "begPairs": ["== Capture start "],
    "endPairs": [" , "],
    "type": "datetime",
    "dbtype": "timestamp"
  },
  "tend": {
    "source": "scontext",
    "begPairs": ["== Capture end "],
    "endPairs": [" ==="],
    "begIndexs": [-1],
    "type": "datetime",
    "dbtype": "timestamp"
  },
  "mac": {
    "source": "scontext",
    "begPairs": ["# MAC_START="],
    "endPairs": [[","," "]],
    "type": "str",
    "dbtype": "varchar(14)"
  }, 
  "tpver": {
    "source": "scontext",
    "begPairs": ["# TPVER="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(20)"
  },
  "fwver": {
    "source": "scontext",
    "begPairs": ["# FWVER="],
    "endPairs": [[" ",","]],
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "wo": {
    "source": "scontext",
    "type": "str",
    "begPairs": ["_f_sfis_Save_Test_Result:"],
    "endPairs": ["\n"],
    "actions": {
      "split": {
        "sep": ",",
        "index": 5
      }
    },
    "dbtype": "varchar(32)"
  },
  "line":{
    "source": "scontext",
    "begPairs": ["# LINE="],
    "endPairs": [[" ", ","]],
    "type": "str",
    "dbtype": "varchar(12)"
  },
  "brd_label":{
    "source": "scontext",
    "type": "str",
    "begPairs":[" BLVER "],
    "endPairs":["#"],
    "actions": {"strip": {}},
    "dbtype":"varchar(32)"
  },
  "ult":{
    "source": "scontext",
    "type": "str",
    "begPairs":[" ULT: "],
    "endPairs":["\n"],
    "actions": {"strip": {}},
    "dbtype":"varchar(32)"
  },
  "rpi_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],    
    "actions": {
      "findMaxPattern": {
        "pattern": "temp=([0-9.]+)'C"
      }
    },
    "dbtype":"float"
  },
  "soc_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs":[],
    "endPairs":[],
    "actions": {
      "findMaxPattern": {
        "pattern": "\ntemperature: ([0-9.]+) celsius"
      }
    },
    "dbtype":"float"
  },
  "critical_temp_max": {
    "source": "scontext",
    "type": "float",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "findMaxPattern": {
        "pattern": "critical temperature reached \\((\\d+) C\\)"
      }
    },
    "dbtype":"float"
  },
  "kernel_panic": {
    "source": "scontext",
    "type": "bool",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "trueFalse": { "contains_nocase": "kernel panic" }
    },
    "dbtype": "boolean"
  },

  "sdr_cpu_temp": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Cpu temperature: "],
    "endPairs": ["<_f_SDR_Test>", "\n"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_soc_temp": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "SoC temperature: "],
    "endPairs": ["<_f_SDR_Test>", "\n"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_core_temp": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Core temperature: "],
    "endPairs": ["<_f_SDR_Test>", "\n"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_12v_a_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "12V current: "],
    "endPairs": ["<_f_SDR_Test>", "[mA]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_12v2_a_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "12V_2 current:"],
    "endPairs": ["<_f_SDR_Test>", "[mA]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_3v3_a_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "3.3V current: "],
    "endPairs": ["<_f_SDR_Test>", "[mA]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_12v_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "12V voltage: "],
    "endPairs": ["<_f_SDR_Test>", "[mV]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_12v2_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "12V_2 voltage: "],
    "endPairs": ["<_f_SDR_Test>", "[mV]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_3v3_in": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "3.3V voltage: "],
    "endPairs": ["<_f_SDR_Test>", "[mV]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_cpu_a": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Cpu current: "],
    "endPairs": ["<_f_SDR_Test>", "[A]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_core_a": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Core current: "],
    "endPairs": ["<_f_SDR_Test>", "[A]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_cpu_v": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Cpu volage: "],
    "endPairs": ["<_f_SDR_Test>", "[mV]"],
    "type": "float",
    "dbtype": "float"
  },
  "sdr_core_v": {
    "source": "scontext",
    "begPairs": ["PT SDR Test", "Core volage: "],
    "endPairs": ["<_f_SDR_Test>", "[mV]"],
    "type": "float",
    "dbtype": "float"
  },

  "hpl_12v_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 12V volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 12V volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_12v_max", "hpl_12v_min"]}},
    "dbtype": "float"
  },
  "hpl_12v_a_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 12V current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v_a_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 12V current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v_a_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_12v_a_max", "hpl_12v_a_min"]}},
    "dbtype": "float"
  },
  "hpl_12v2_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 12V_2 volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v2_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 12V_2 volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v2_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_12v2_max", "hpl_12v2_min"]}},
    "dbtype": "float"
  },
  "hpl_12v2_a_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 12V_2 current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v2_a_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 12V_2 current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_12v2_a_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_12v2_a_max", "hpl_12v2_a_min"]}},
    "dbtype": "float"
  },
  "hpl_3v3_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 3.3V volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
   "hpl_3v3_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 3.3V volt:\\s*([0-9.]+)\\s*\\[mV\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_3v3_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_3v3_max", "hpl_3v3_min"]}},
    "dbtype": "float"
  },
  "hpl_3v3_a_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Readout 3.3V current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_3v3_a_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Readout 3.3V current:\\s*([0-9.]+)\\s*\\[mA\\]"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_3v3_a_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_3v3_a_max", "hpl_3v3_a_min"]}},
    "dbtype": "float"
  },
  "hpl_temp_max": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMaxPattern": {
        "pattern": "Temperature Measured:\\s*([0-9.]+)\\s*celsius"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_temp_min": {
    "source": "scontext",
    "begPairs": ["PT HPL SDR Parser Test"],
    "endPairs": ["Total Result "],
    "actions": {
      "findMinPattern": {
        "pattern": "Temperature Measured:\\s*([0-9.]+)\\s*celsius"
      }
    },
    "type": "float",
    "dbtype": "float"
  },
  "hpl_temp_delta": {
    "source": "scontext",
    "begPairs": [],
    "endPairs": [],
    "type": "float",
    "actions": {"delta": {"from_keys": ["hpl_temp_max", "hpl_temp_min"]}},
    "dbtype": "float"
  },

  "slot": {
    "source": "bname",
    "begPairs": [],
    "endPairs": [],
    "actions": {
      "split": {
        "sep": "_",
        "index": 3
      }
    },
    "type": "str",
    "dbtype": "varchar(12)"
  },
    "test_pc_ip": {
    "source": "scontext",
    "begPairs": ["# TEST_PC_IP="],
    "endPairs": [" "],
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "jig": {
    "source": "scontext",
    "begPairs": ["# TEST_PC_IP="],
    "endPairs": [" "],
    "actions": {
      "merge": {
        "with_var": "slot",
        "sep": "_"
      }
    },
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "dbbrd_sn": {
    "source": "scontext",
    "begPairs": ["DB Mainboard SN : "],
    "endPairs": ["#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "varchar(12)"
  },
  "plx_sn": {
    "source": "scontext",
    "begPairs": ["PLX board SN : "],
    "endPairs": ["#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "varchar(14)"
  },
  "err_msg": {
    "source": "scontext",
    "begPairs": ["# ErrorMSG: "],
    "endPairs": [ "#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "text"
  },
  "err_id": {
    "source": "scontext",
    "begPairs": ["# ErrorId:  "],
    "endPairs": [ "#"],
    "actions": {"strip": {}},
    "type": "str",
    "dbtype": "varchar(16)"
  },
  "hash_value": {
    "source": "scontext",
    "begPairs":["LOT_CODE\n"],
    "endPairs":[["\nEND","\n---","\n###"]],
    "actions": {"hash" : {}},
    "type": "str",
    "dbtype":"text"
  }
}